<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>CMPUT 301 - individual</title><link href="https://ualberta-cmput301.github.io/" rel="alternate"/><link href="https://ualberta-cmput301.github.io/feeds/individual.atom.xml" rel="self"/><id>https://ualberta-cmput301.github.io/</id><updated>2025-09-02T00:00:00-06:00</updated><subtitle>Software Engineering</subtitle><entry><title>Assignment 1</title><link href="https://ualberta-cmput301.github.io/individual/assignment1.html" rel="alternate"/><published>2025-09-02T00:00:00-06:00</published><updated>2025-09-02T00:00:00-06:00</updated><author><name>Hazel Victoria Campbell</name></author><id>tag:ualberta-cmput301.github.io,2025-09-02:/individual/assignment1.html</id><summary type="html">&lt;p&gt;Assignment 1&lt;/p&gt;</summary><content type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#assignment-emotilog-a-quick-emotion-logging-app"&gt;Assignment: EmotiLog - A Quick Emotion Logging App&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#learning-objectives"&gt;Learning Objectives:&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#problem-description"&gt;Problem Description:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Due date:&lt;/strong&gt; Check the &lt;a href="https://ualberta-cmput301.github.io/#schedule"&gt;schedule&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id="assignment-emotilog-a-quick-emotion-logging-app"&gt;Assignment: EmotiLog - A Quick Emotion Logging App&lt;/h5&gt;
&lt;h3 id="learning-objectives"&gt;&lt;strong&gt;Learning Objectives:&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create a simple, interactive mobile application using Android and
    Java.&lt;/li&gt;
&lt;li&gt;Document an object-oriented design using Unified Modeling Language
    (UML).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="problem-description"&gt;&lt;strong&gt;Problem Description:&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Develop an Android app called &lt;strong&gt;YOURCCID-EmotiLog&lt;/strong&gt; (e.g.,
kennyw-EmotiLog) that allows users to quickly log their feelings or
significant events by pressing emoticon buttons. The app should enable
users to easily record each selected emoticon along with the
corresponding timestamp, and then provide a summary of logs by frequency
over a specified period.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Preset Emoticon Buttons:&lt;/strong&gt; 6 to 9 customizable emoticon
    buttons representing different feelings or events (e.g., Happy,
    Sad, Grateful, Angry, Excited, etc.).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Logging Functionality:&lt;/strong&gt; Each button press records the
    selected emoticon and the current timestamp.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Daily Summary:&lt;/strong&gt; Users can view a summary of logged emoticons
    for each day, including total counts and frequencies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;User-Friendly Interface:&lt;/strong&gt; The app must provide a simple and
    attractive user interface to enhance ease of use.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Deliverables:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Code Base:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Complete Android Studio project and compiled APK.&lt;/li&gt;
&lt;li&gt;Each class must be properly commented to describe its
    purpose, design rationale, and any outstanding issues.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Video:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;A demonstration video (max 3 minutes) showing the app\'s
    core functionalities without audio. It should illustrate how
    to log emoticons and view summaries.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;System Documentation:&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;UML class diagram(s) detailing the app\'s object-oriented
    design. Include notes on each class\'s main
    responsibilities.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Demonstration Actions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open the app from the launcher.&lt;/li&gt;
&lt;li&gt;Show the main screen with emoticon buttons.&lt;/li&gt;
&lt;li&gt;Press an emoticon button (e.g., Happy)&lt;/li&gt;
&lt;li&gt;Navigate to the list of emoticon events and confirm that it logs
    the selected emoticons with the timestamp.&lt;/li&gt;
&lt;li&gt;Return to main screen with emoticon buttons.&lt;/li&gt;
&lt;li&gt;Press 1 emotion 10 times in rapid succession.&lt;/li&gt;
&lt;li&gt;Navigate to the list of emoticon events and confirm that it logs
    the selected emoticons with the timestamp.&lt;/li&gt;
&lt;li&gt;Return to the main screen.&lt;/li&gt;
&lt;li&gt;Press 1 emotion 5 times in rapid succession.&lt;/li&gt;
&lt;li&gt;Go to the summary screen and show the emoticon counts.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hints&lt;/p&gt;
&lt;p&gt;This is a description of the core functionality. Often, problem
statements from users lack details. As you are prototyping a design,
you may uncover other behaviors that have not been specified, but
make sense in the context and intent of the application. For
example, think about how someone might effectively use your
application. It is up to you to decide what functions your design
will need, based on the given problem description and valid
assumptions, in discussion with your users (the TAs and instructor).
You should consider asking the customer (the instructor) what they
want to see. While you may discuss your design with other students,
the code and documentation must be your own work.&lt;/p&gt;
&lt;p&gt;Code from publicly available sources may be used within reason and
only if their licenses permit so. Always fully cite to give proper
credit to the original developers in the source code and in the
system documentation. For example, in citing a work, at least state:
from whom, the date of publication, license, and URL. Do what is
required by its license.&lt;/p&gt;
&lt;p&gt;The TAs will be inspecting your code, so \"major\" commented-out
experiments should be cleaned up so that the code is readable.&lt;/p&gt;
&lt;p&gt;Do not skimp on the UML class diagrams in the system documentation.
For neatness and readability, diagrams should be created or drawn
using a vector graphics editing tool and exported in a common,
non-lossy graphics format.&lt;/p&gt;
&lt;p&gt;Besides addressing the problem correctly, your software design will
be evaluated on its proper use of object-oriented design concepts,
such as separation of concerns and information hiding.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Losing Marks&lt;/p&gt;
&lt;p&gt;You may lose marks for any of the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;files not in properly named subdirectories&lt;/li&gt;
&lt;li&gt;missing compiled binary APK file for the app&lt;/li&gt;
&lt;li&gt;cannot run the app after install&lt;/li&gt;
&lt;li&gt;cannot distinguish CCID from the app name&lt;/li&gt;
&lt;li&gt;cannot view files without specialized tools&lt;/li&gt;
&lt;li&gt;lossy compression used in image file(s) for UML (e.g., JPEG)&lt;/li&gt;
&lt;li&gt;inadequate or improper citations&lt;/li&gt;
&lt;li&gt;using RAR archive format&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These areÂ brown M&amp;amp;M rules.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Submission Procedure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a directory named &lt;strong&gt;YOURCCID-EmotiLog&lt;/strong&gt; (e.g.,
    kennyw-EmotiLog) and include the following subdirectories:
    &lt;strong&gt;code&lt;/strong&gt;, &lt;strong&gt;video&lt;/strong&gt;, &lt;strong&gt;doc&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Place the Android Studio project in the &lt;strong&gt;code&lt;/strong&gt; directory.&lt;/li&gt;
&lt;li&gt;Include the APK file under
    &lt;strong&gt;code/app/build/outputs/apk/debug/app-debug.apk&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Store the demonstration video in the &lt;strong&gt;video&lt;/strong&gt; directory.&lt;/li&gt;
&lt;li&gt;Keep UML documentation in the &lt;strong&gt;doc&lt;/strong&gt; directory.&lt;/li&gt;
&lt;li&gt;Zip the &lt;strong&gt;YOURCCID-EmotiLog&lt;/strong&gt; directory and upload.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Evaluation Criteria:&lt;/p&gt;
&lt;p&gt;The submission will be assessed according to the following
categories:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Excellent (8):&lt;/strong&gt; Functionality meets all requirements,
    intuitive UI, comprehensive UML, and a clear video
    demonstration.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Good (7):&lt;/strong&gt; Minor issues but overall functional and follows
    submission rules.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Satisfactory (5):&lt;/strong&gt; Runs, but noticeable issues; some
    requirements may be missing; UML is present but may be
    incomplete.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Unsatisfactory (4):&lt;/strong&gt; Significant issues affecting
    functionality or missing requirements.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Failure (0):&lt;/strong&gt; Incomplete submissions or missing vital
    components such as Videos, UML, or code.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Excellent (8):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The app is fully functional, meeting all the specified
    requirements.&lt;/li&gt;
&lt;li&gt;The user interface is intuitive, attractive, and responsive.&lt;/li&gt;
&lt;li&gt;The app follows the brown M&amp;amp;M rules.&lt;/li&gt;
&lt;li&gt;The UML documentation is comprehensive and accurately represents
    the object-oriented design.&lt;/li&gt;
&lt;li&gt;The video demonstration clearly showcases all required actions,
    and the app performs flawlessly in the demo.&lt;/li&gt;
&lt;li&gt;Must have a Video&lt;/li&gt;
&lt;li&gt;Must have UML&lt;/li&gt;
&lt;li&gt;Must Have Codebase&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Good (7):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The app runs and performs the expected functionalities.&lt;/li&gt;
&lt;li&gt;Minor issues may be present, such as a small bug or a slight
    deviation from the requirements.&lt;/li&gt;
&lt;li&gt;The user interface is satisfactory but may have some room for
    improvement.&lt;/li&gt;
&lt;li&gt;The app follows the brown M&amp;amp;M rules.&lt;/li&gt;
&lt;li&gt;The UML documentation is mostly complete but may have minor
    omissions.&lt;/li&gt;
&lt;li&gt;Must have a Video&lt;/li&gt;
&lt;li&gt;Must have UML&lt;/li&gt;
&lt;li&gt;Must Have Codebase&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Satisfactory (5):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The app runs, but there are noticeable issues affecting its
    stability or functionality.&lt;/li&gt;
&lt;li&gt;Some requirements may be missing or not fully implemented.&lt;/li&gt;
&lt;li&gt;The user interface is functional but may lack polish or suffer
    from usability issues.&lt;/li&gt;
&lt;li&gt;The app may not fully adhere to the brown M&amp;amp;M rules.&lt;/li&gt;
&lt;li&gt;The UML documentation is present but may be incomplete or
    inaccurate.&lt;/li&gt;
&lt;li&gt;Must have a Video&lt;/li&gt;
&lt;li&gt;Must have UML&lt;/li&gt;
&lt;li&gt;Must Have Codebase&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Unsatisfactory (4):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Effort has been put into the assignment, but the app may not run
    well or may have significant functionality issues.&lt;/li&gt;
&lt;li&gt;Several requirements are missing or not implemented.&lt;/li&gt;
&lt;li&gt;The user interface may be confusing or challenging to use.&lt;/li&gt;
&lt;li&gt;The app may not follow the brown M&amp;amp;M rules.&lt;/li&gt;
&lt;li&gt;The UML documentation lacks essential components, incomplete,
    inaccuate.&lt;/li&gt;
&lt;li&gt;Must have a Video&lt;/li&gt;
&lt;li&gt;Must have UML&lt;/li&gt;
&lt;li&gt;Must Have Codebase&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Failure (0):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The assignment is incomplete, lacking essential components such
    as UML documentation, video demonstration, or code.&lt;/li&gt;
&lt;li&gt;No submission is provided.&lt;/li&gt;
&lt;li&gt;Could be missing any one of these: Video, UML, Codebase&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</content><category term="individual"/><category term="individual"/><category term="policy"/><category term="grading"/></entry><entry><title>Assignment 0: Getting Started</title><link href="https://ualberta-cmput301.github.io/individual/assignment0.html" rel="alternate"/><published>2024-08-12T00:00:00-06:00</published><updated>2024-08-12T00:00:00-06:00</updated><author><name>Hazel Victoria Campbell</name></author><id>tag:ualberta-cmput301.github.io,2024-08-12:/individual/assignment0.html</id><summary type="html">&lt;p&gt;Assignment 0: Getting Started&lt;/p&gt;</summary><content type="html">&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#learning-objectives"&gt;Learning Objectives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#problem-description"&gt;Problem Description&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#submission-procedure"&gt;Submission Procedure&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#hints"&gt;Hints&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Due date:&lt;/strong&gt; Check the &lt;a href="https://ualberta-cmput301.github.io/#schedule"&gt;schedule&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="learning-objectives"&gt;Learning Objectives&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Learn how to use Android Studio on your computer.&lt;/li&gt;
&lt;li&gt;Learn to create, build, and run a simple Android app.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="problem-description"&gt;Problem Description&lt;/h3&gt;
&lt;p&gt;Install Android Studio on your own computer.&lt;/p&gt;
&lt;p&gt;Make and run a simple hello world app according to the Build your first app in this &lt;a href="https://ualberta-cmput301.github.io/individual/Build_Your_First_Android_App_in_Java.pdf"&gt;tutorial&lt;/a&gt;.Ensure you do all of this tutorial, including the final section on Fragments.&lt;/p&gt;
&lt;p&gt;In Section 6 step 10 where it says change the text of the TextView to 0, type in your student number instead. So the count button will increment your student number. Do not prefix your student number with zeros.
Deliverables
Screenshots:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;First&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;screenshot&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Take&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;first&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;screenshot&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;running&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;app&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;before&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;press&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;button&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;should&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;show&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;student&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;number&lt;/span&gt;.

&lt;span class="nv"&gt;Second&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;screenshot&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Take&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;second&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;screenshot&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;running&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;app&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;showing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;activity&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;after&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;you&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;tap&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Count&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;button&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;times&lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;The&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;result&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;should&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;be&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;your&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;student&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;number&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;

&lt;span class="nv"&gt;Each&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;screenshot&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;should&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;show&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;development&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;environment&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;just&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;device&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;display&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;with&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;interface&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;running&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;app&lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;Capturing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;frame&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;the&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;emulator&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;window&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;fine&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="submission-procedure"&gt;Submission Procedure&lt;/h3&gt;
&lt;p&gt;Use a non-lossy image format for the screenshots (like PNG with usually lossless settings, and not JPEG with usually lossy settings).&lt;/p&gt;
&lt;p&gt;Do not use a phone camera to take the images.&lt;/p&gt;
&lt;p&gt;Name the two screenshot files with your CCID (e.g., kennyw-1.png, kennyw-2.png). Zip the files (e.g., kennyw.zip) and upload the archive using canvas.&lt;/p&gt;
&lt;p&gt;The maximum upload size is 5 MB.&lt;/p&gt;
&lt;p&gt;Proper completion of this assignment is considered as part of course participation.&lt;/p&gt;
&lt;p&gt;Upload your zip file to canvas under "Assignment 0".&lt;/p&gt;
&lt;h3 id="hints"&gt;Hints&lt;/h3&gt;
&lt;p&gt;IF you have build.gradle.ktx files, for the last step instead of&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;def nav_version = &amp;quot;2.3.0-alpha04&amp;quot;
classpath &amp;quot;androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;in your &lt;code&gt;build.gradle.ktx&lt;/code&gt; (Project: My Frist App), You need&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;buildscript {
    repositories {
        google()
    }
    dependencies {
        val nav_version = &amp;quot;2.7.6&amp;quot;
        classpath(&amp;quot;androidx.navigation:navigation-safe-args-gradle-plugin:$nav_version&amp;quot;)
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And instead of:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;apply plugin: &amp;#39;androidx.navigation.safeargs&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You need in your build.gradle.ktx (module: app):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;plugins {
    id(&amp;quot;androidx.navigation.safeargs&amp;quot;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There is also an error step 8 of task 9 that if you get an error about an unresolved inport&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="s2"&gt;&amp;quot;import androidx.navigation.fragment.navArgs&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;but you can just remove that import its not needed for Java code.&lt;/p&gt;</content><category term="individual"/><category term="individual"/><category term="policy"/><category term="grading"/></entry></feed>